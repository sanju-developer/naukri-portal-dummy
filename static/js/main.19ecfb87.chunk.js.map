{"version":3,"sources":["components/Icons/iconNames.js","components/Icons/index.jsx","api/endpoints.js","utils/constants/commonConstants.js","components/Errors/errorNames.js","components/Errors/index.jsx","redux/constants/index.js","redux/actions/commonActionCreator.js","api/api.js","services/auth/loginService.js","redux/actions/auth/loginAction.js","services/auth/registerService.js","screens/Login/index.jsx","components/Input/pswdConfirmPswd.jsx","components/Input/SkillsInput/index.jsx","utils/constants/skillsConstant.js","screens/Register/index.jsx","screens/ForgotPassword/index.jsx","components/Modals/CreateJobModal/minimumLength.jsx","components/Modals/CreateJobModal/modalBody.jsx","redux/actions/recruiterActions/createJobAction.js","services/recruiter/recruiterService.js","components/Modals/CreateJobModal/index.jsx","redux/actions/recruiterActions/getPostedJobsAction.js","redux/actions/recruiterActions/deletePostedJobAction.js","components/Lists/ListPostedJobs.jsx","components/Topbar/index.jsx","screens/RecruiterDashboard/index.jsx","redux/actions/candidate/fetchAllJobsForCandidateAction.js","services/candidate/candidateService.js","redux/actions/candidate/applyForJob.js","redux/actions/candidate/appliedJobs.js","screens/CandidateDashboard/index.jsx","routes/index.jsx","components/ErrorBoundary/index.jsx","App.js","serviceWorker.js","redux/reducers/auth/loginReducer.js","redux/reducers/recruiterReducer/recruiter.js","redux/reducers/recruiterReducer/recruiterPostedJobsReducer.js","redux/reducers/candidateReducer/candidate.js","redux/reducers/candidateReducer/previousAppliedJobsReducer.js","redux/reducers/combineReducer.js","redux/store.js","index.js"],"names":["iconName","Icons","props","type","width","height","viewBox","className","fill","xmlns","fillRule","d","class","renderIcons","routingEndpoints","apiEndpoints","register","login","createJob","getPostedJobs","deletePostedJob","fetchAllAvalaibleJobs","registerFormField","name","email","password","confirmPassword","userRole","skills","API","loginFormField","CreateJobFormField","title","description","location","resetPasswordFormField","UserRoles","id","value","errorMessages","emailRegex","httpMethods","setTokenToLocalStorage","token","localStorage","setItem","getTokenFromLocalStorage","getItem","setUserIdToLocalStorage","userId","setUserRoleToLocalStorage","getUserRoleFromLocalStorage","clearLocalStorage","clear","ErrorNames","Error","renderErrorMessages","commonActionType","actionTypes","commonActionCreator","actionType","payload","api","endpoint","apiMethod","data","queryParams","content","apiParameter","method","url","undefined","params","headers","Authorization","withCredentials","axios","then","handleResponse","response","res","LoginUser","formData","callFrom","dispatch","LoginUserService","service","catch","error","connect","state","apiData","userData","apiError","isApiLoading","isLoggedIn","loginUser","registerData","history","useHistory","useState","isButtonDisable","setIsButtonDisable","loginForm","setLoginForm","isEmailvalid","setIsEmailvalid","isBtnClicked","setIsBtnClicked","useEffect","length","code","replace","onChangeHandler","event","target","message","htmlFor","aria-describedby","placeholder","onChange","onClick","push","disabled","e","preventDefault","test","toLowerCase","PswdConfirmPswd","isPasswordAndConfirmPasswordEqual","suggestions","map","country","text","delimiters","SkillsField","tags","handleDelete","bind","handleAddition","handleDrag","handleTagClick","i","this","setState","filter","tag","index","addSkills","currPos","newPos","newTags","slice","splice","console","log","ReactTags","React","Component","registerUser","registerForm","setRegisterForm","setIsPasswordAndConfirmPasswordEqual","selectedIndex","errors","err","roles","key","item","join","ForgotPassword","resetPasswordForm","setResetPasswordForm","goBack","MinimumLength","ModalBody","createJobForm","CreateJob","jobData","show","onHide","setCreateJobForm","style","display","tabIndex","role","aria-labelledby","aria-hidden","backdrop","deletePostedJobs","jobId","deletePostedJobsService","ListPostedJobs","btnHandler","screen","myJobs","isApplied","logoutUser","recruiterPostedJobs","createJobApiData","deleteJob","clearDataCreateJobData","showCreateJobModal","setShowCreateJobModal","data-toggle","data-target","getPostedJobsForCandidates","appliedJobs","applyForJobService","fetchPreviousAppliedJobs","withRouter","jobsForCandidates","apiDataOfPreviousJobs","previousAppliedJobs","getAvailableJobs","applyForJob","getPreviouslyAppliedJobs","selectedTab","setSelectedTab","Routing","exact","path","Register","Login","ErrorBoundary","hasError","errorInfo","children","App","basename","JSON","parse","Boolean","window","hostname","match","initialState","isApiFailed","loginReducer","action","recruiterReducer","RECRUITER_POSTED_JOBSReducer","job","candidateReducer","previousAppliedJobsReducer","rootReducer","combineReducers","recruiterPostedJobsReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19ecfb87.chunk.js","sourcesContent":["export const iconName = {\n  rightArrow: \"rightArrow\",\n  add: \"add\",\n  delete: \"delete\",\n  job: \"job\"\n};\n","import React from \"react\";\nimport { iconName } from \"./iconNames\";\n\nfunction Icons(props) {\n  const { type } = props;\n\n  const renderIcons = () => {\n    switch (type) {\n      case iconName.rightArrow:\n        return (\n          <svg\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            className=\"bi bi-arrow-right\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"\n            />\n          </svg>\n        );\n\n      case iconName.add:\n        return (\n          <svg\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            class=\"bi bi-plus\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n            />\n          </svg>\n        );\n\n      case iconName.delete:\n        return (\n          <svg\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            class=\"bi bi-archive-fill\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M12.643 15C13.979 15 15 13.845 15 12.5V5H1v7.5C1 13.845 2.021 15 3.357 15h9.286zM5.5 7a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zM.8 1a.8.8 0 0 0-.8.8V3a.8.8 0 0 0 .8.8h14.4A.8.8 0 0 0 16 3V1.8a.8.8 0 0 0-.8-.8H.8z\"\n            />\n          </svg>\n        );\n\n      case iconName.job:\n        return (\n          <svg\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            class=\"bi bi-briefcase-fill\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M0 12.5A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5V6.85L8.129 8.947a.5.5 0 0 1-.258 0L0 6.85v5.65z\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M0 4.5A1.5 1.5 0 0 1 1.5 3h13A1.5 1.5 0 0 1 16 4.5v1.384l-7.614 2.03a1.5 1.5 0 0 1-.772 0L0 5.884V4.5zm5-2A1.5 1.5 0 0 1 6.5 1h3A1.5 1.5 0 0 1 11 2.5V3h-1v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V3H5v-.5z\"\n            />\n          </svg>\n        );\n    }\n  };\n\n  return renderIcons();\n}\n\nexport default Icons;\n","export const routingEndpoints = {\n  register: \"/register\",\n  login: \"/login\",\n  forgotPswd: \"/reset-password\",\n  recruiterDashboard: \"/recruiter-dashboard\",\n  candidateDashboard: \"/candidate-dashboard\"\n};\n\nexport const JOBS = \"jobs\";\nconst RECRUITER = \"recruiters\";\nexport const CANDIDATES = \"candidates\";\n\nexport const apiEndpoints = {\n  register: \"auth/register\",\n  login: \"auth/login\",\n  createJob: `${JOBS}/`,\n  getPostedJobs: `${RECRUITER}/${JOBS}`,\n  deletePostedJob: `${JOBS}?`,\n  fetchAllAvalaibleJobs: `${CANDIDATES}/${JOBS}?`\n};\n","export const registerFormField = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  userRole: 0,\n  skills: \"\"\n};\n\nexport const API = {\n  baseUrl: \"https://jobs-api.squareboat.info/api/v1/\"\n};\n\nexport const loginFormField = {\n  email: \"\",\n  password: \"\"\n};\n\nexport const CreateJobFormField = {\n  title: \"\",\n  description: \"\",\n  location: \"\"\n};\n\nexport const resetPasswordFormField = {\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nexport const UserRoles = [\n  { id: \"ur2\", value: \"Recruiter\" },\n  { id: \"ur1\", value: \"Candidate\" }\n];\n\nexport const errorMessages = {\n  passwordAndConfirmPasswordIsNotEqual:\n    \"Password and Confirm password are not equal\",\n  emailNotvalid: \"Please enter a valid email\",\n  passwordLengthShouldBeMinimumOf6DigitMessage:\n    \"Password should be minimum of 6 digit\"\n};\n\nexport const emailRegex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\nexport const httpMethods = {\n  GET: \"get\",\n  PUT: \"put\",\n  POST: \"post\",\n  DELETE: \"delete\",\n  PATCH: \"patch\"\n};\n\nexport const errorStatusCode = {\n  internalServerErrorCode: 500\n};\n\n// Create queryparams\nexport function createQueryParams(queryParamString) {\n  let params = {};\n  if (typeof queryParamString === \"string\") {\n    // case when we have queryParams in string format like we used in filter api where we used to send only parmater name without any key\n    const queryParams = queryParamString.split(\"&\");\n    params = queryParams.reduce((accumulator, currValue) => {\n      const keyValue = currValue.split(\"=\");\n      accumulator[keyValue[0]] = decodeURIComponent(keyValue[1]);\n      return accumulator;\n    }, {});\n  } else return queryParamString;\n\n  return params;\n}\n\nexport function setTokenToLocalStorage(token) {\n  localStorage.setItem(\"token\", token);\n}\nexport function getTokenFromLocalStorage() {\n  return localStorage.getItem(\"token\");\n}\n\nexport function setUserIdToLocalStorage(userId) {\n  localStorage.setItem(\"userId\", userId);\n}\nexport function getUserIdFromLocalStorage() {\n  return localStorage.getItem(\"userId\");\n}\n\nexport function setUserRoleToLocalStorage(userRole) {\n  localStorage.setItem(\"userRole\", userRole);\n}\n\nexport function getUserRoleFromLocalStorage() {\n  return localStorage.getItem(\"userRole\");\n}\n\nexport function clearLocalStorage() {\n  localStorage.clear();\n}\n\nexport const candidateScreen = \"candidateScreen\";\nexport const recruiterScreen = \"recruiterScreen\";\nexport const previousAppliedJobs = \"previousAppliedJobs\";\n","export const ErrorNames = {\n  passwordAndConfirmPssword: \"passwordAndConfirmPssword\",\n  emailNotvalid: \"emailNotvalid\",\n  passwordLengthShouldBeMinimumOf6Digit: \"passwordLengthShouldBeMinimumOf6Digit\"\n};\n","import React from \"react\";\nimport { ErrorNames } from \"./errorNames\";\nimport { errorMessages } from \"utils/constants/commonConstants\";\n\nfunction Error(props) {\n  const { type } = props;\n  const renderErrorMessages = () => {\n    switch (type) {\n      case ErrorNames.passwordAndConfirmPssword:\n        return errorMessages.passwordAndConfirmPasswordIsNotEqual;\n\n      case ErrorNames.emailNotvalid:\n        return errorMessages.emailNotvalid;\n\n      case ErrorNames.passwordLengthShouldBeMinimumOf6Digit:\n        return errorMessages.passwordLengthShouldBeMinimumOf6DigitMessage;\n    }\n  };\n\n  return <div className=\"error\">{renderErrorMessages()}</div>;\n}\n\nexport default Error;\n","export const commonActionType = {\n  isApiLoading: \"IS_LOADING\",\n  setData: \"SET_DATA\",\n  setError: \"SET_ERROR\",\n  clearData: \"CLEAR_DATA\",\n  clearError: \"CLEAR_ERROR\",\n  internalServerError: \"INTERNAL_SERVER_ERROR\",\n  clearInternalServerError: \"CLEAR_INTERNAL_SERVER_ERROR\"\n};\n\nexport const actionTypes = {\n  deletePostedJob: \"DELETE_POSTED_JOB\",\n  jobApplied: \"JOB_APPLIED\",\n  logout: \"LOGOUT\"\n};\n\nexport const LOGINREDUXCONSTANT = \"LOGIN\";\nexport const RECRUITER_CREATE_JOB = \"RECRUITER_CREATE_JOB\";\nexport const RECRUITER_POSTED_JOBS = \"RECRUITER_POSTED_JOBS\";\nexport const RECRUITER_ACTION_ON_JOBS = \"RECRUITER_ACTION_ON_JOBS\";\nexport const AVAILAIBLE_JOBS_FOR_CANDIDATE = \"AVAILAIBLE_JOBS_FOR_CANDIDATE\";\nexport const APPLIED_JOBS = \"APPLIED_JOBS\";\nexport const PREVIOUS_APPLIED_JOBS = \"PREVIOUS_APPLIED_JOBS\";\n","export const commonActionCreator = (actionType, payload) => {\n  return {\n    type: actionType,\n    payload\n  };\n};\n","import axios from \"axios\";\nimport { API, getTokenFromLocalStorage } from \"utils/constants/commonConstants\";\n\nexport const api = (endpoint, apiMethod, data, queryParams) => {\n  const apiParameter = {\n    method: apiMethod,\n    url: API.baseUrl + endpoint\n  };\n  // Conditinal check for sending data/queryparams in apiParameter\n  if (data !== null) {\n    apiParameter.data = data;\n  }\n  if (queryParams !== undefined) {\n    apiParameter.params = queryParams;\n  }\n\n  if (getTokenFromLocalStorage()) {\n    apiParameter.headers = {\n      Authorization: `${getTokenFromLocalStorage()}`,\n      withCredentials: true\n    };\n  }\n\n  return axiosApi(apiParameter);\n};\n\nfunction axiosApi(content) {\n  return axios(content).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  const type = response.headers[\"content-type\"];\n  let res;\n  if (type === \"application/json\") {\n    res = response;\n  }\n  return res ?? response;\n}\n","import { httpMethods } from \"utils/constants/commonConstants\";\nimport { apiEndpoints } from \"api/endpoints\";\nimport { api } from \"api/api\";\n\nexport const LoginUserService = data => {\n  return api(`${apiEndpoints.login}`, httpMethods.POST, data);\n};\n","import {\n  commonActionType,\n  LOGINREDUXCONSTANT,\n  actionTypes\n} from \"redux/constants\";\nimport { commonActionCreator } from \"../commonActionCreator\";\nimport { LoginUserService } from \"services/auth/loginService\";\nimport { RegisterUserService } from \"services/auth/registerService\";\n\nexport const LoginUser = (formData, callFrom) => {\n  return dispatch => {\n    dispatch(\n      commonActionCreator(\n        `${LOGINREDUXCONSTANT}_${commonActionType.isApiLoading}`,\n        true\n      )\n    );\n    service(formData, callFrom)\n      .then(response => {\n        dispatch(\n          commonActionCreator(\n            `${LOGINREDUXCONSTANT}_${commonActionType.isApiLoading}`,\n            false\n          )\n        );\n        dispatch(\n          commonActionCreator(\n            `${LOGINREDUXCONSTANT}_${commonActionType.setData}`,\n            response.data\n          )\n        );\n      })\n      .catch(error =>\n        dispatch(\n          commonActionCreator(\n            `${LOGINREDUXCONSTANT}_${commonActionType.setError}`,\n            error.response.data\n          )\n        )\n      );\n  };\n};\n\nexport const loggedout = () => {\n  return dispatch => {\n    dispatch(\n      commonActionCreator(`${LOGINREDUXCONSTANT}_${actionTypes.logout}`)\n    );\n  };\n};\n\nfunction service(formData, callFrom) {\n  return callFrom === \"register\"\n    ? RegisterUserService(formData)\n    : LoginUserService(formData);\n}\n","import { httpMethods } from \"utils/constants/commonConstants\";\nimport { apiEndpoints } from \"api/endpoints\";\nimport { api } from \"api/api\";\n\nexport const RegisterUserService = data => {\n  return api(`${apiEndpoints.register}`, httpMethods.POST, data);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { iconName } from \"components/Icons/iconNames\";\nimport Icons from \"components/Icons\";\nimport { routingEndpoints } from \"api/endpoints\";\n\nimport \"./login.scss\";\nimport {\n  loginFormField,\n  emailRegex,\n  setTokenToLocalStorage,\n  setUserIdToLocalStorage,\n  setUserRoleToLocalStorage\n} from \"utils/constants/commonConstants\";\nimport Error from \"components/Errors\";\nimport { ErrorNames } from \"components/Errors/errorNames\";\nimport { LoginUser } from \"redux/actions/auth/loginAction\";\n\nfunction LoginForm(props) {\n  const { loginUser, apiData, apiError, isApiLoading, isLoggedIn } = props;\n  const history = useHistory();\n  const [isButtonDisable, setIsButtonDisable] = useState(true);\n  const [loginForm, setLoginForm] = useState(loginFormField);\n  const [isEmailvalid, setIsEmailvalid] = useState(false);\n  const [isBtnClicked, setIsBtnClicked] = useState(false);\n\n  useEffect(() => {\n    if (loginForm.password.length >= 6 && loginForm.email.length !== 0) {\n      setIsButtonDisable(false);\n    } else setIsButtonDisable(true);\n  }, [loginForm]);\n\n  useEffect(() => {\n    if (isEmailvalid && isBtnClicked) {\n      loginUser(loginForm);\n    }\n  }, [isEmailvalid, isBtnClicked]);\n\n  useEffect(() => {\n    if (apiData) {\n      setTokenToLocalStorage(apiData?.data?.token);\n      setUserIdToLocalStorage(apiData?.data?.id);\n      setUserRoleToLocalStorage(apiData?.data?.userRole);\n      if (apiData?.code === 200 && apiData?.data?.userRole === 0 && isLoggedIn)\n        history.replace(routingEndpoints.recruiterDashboard);\n      if (apiData?.code === 200 && apiData?.data?.userRole === 1 && isLoggedIn)\n        history.replace(routingEndpoints.candidateDashboard);\n    }\n  }, [apiData, isLoggedIn]);\n\n  const onChangeHandler = event => {\n    setLoginForm({\n      ...loginForm,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const loginBtnHandle = e => {\n    e.preventDefault();\n    setIsEmailvalid(emailRegex.test(loginForm.email.toLowerCase()));\n    setIsBtnClicked(true);\n    if (isEmailvalid && isBtnClicked) {\n      loginUser(loginForm);\n    }\n  };\n\n  return (\n    <div className=\"entry-form\">\n      <h1 className=\"display-4 text-left login-form-title\">Login</h1>\n      {apiError && (\n        <div className=\"error\">\n          <p>{apiError?.message}</p>\n        </div>\n      )}\n      <form>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"user-email-login\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            value={loginForm.email}\n            onChange={onChangeHandler}\n          />\n          {!isEmailvalid && isBtnClicked && (\n            <Error type={ErrorNames.emailNotvalid} />\n          )}\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"user-pswd-login\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n            value={loginForm.password}\n            onChange={onChangeHandler}\n          />\n          {loginForm.password.length < 6 && isBtnClicked && (\n            <Error type={ErrorNames.passwordLengthShouldBeMinimumOf6Digit} />\n          )}\n        </div>\n        <button\n          type=\"submit\"\n          onClick={() => history.push(routingEndpoints.forgotPswd)}\n          className=\"right-side w-100 btn btn-link d-none\"\n        >\n          Forgot Password?\n        </button>\n        <div className=\"login-btn mt-4\">\n          <button\n            type=\"submit\"\n            disabled={isButtonDisable || isApiLoading}\n            className=\"btn btn-primary\"\n            onClick={loginBtnHandle}\n          >\n            Login\n            <span className=\"pl-2\">\n              {!isApiLoading ? (\n                <Icons type={iconName.rightArrow} />\n              ) : (\n                <span className=\"spinner-border\"></span>\n              )}\n            </span>\n          </button>\n        </div>\n      </form>\n      <button\n        type=\"button\"\n        className=\"text-center login-here pt-4 w-100 btn btn-link\"\n        onClick={() => history.push(routingEndpoints.register)}\n      >\n        Not a memeber? Register here\n      </button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: registerData => dispatch(LoginUser(registerData, \"login\"))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    apiData: state.userData.apiData,\n    apiError: state.userData.apiError,\n    isApiLoading: state.userData.isApiLoading,\n    isLoggedIn: state.userData.isLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React from \"react\";\nimport { ErrorNames } from \"components/Errors/errorNames\";\nimport Error from \"components/Errors\";\n\nfunction PswdConfirmPswd(props) {\n  const {\n    password,\n    confirmPassword,\n    onChangeHandler,\n    isPasswordAndConfirmPasswordEqual,\n    isBtnClicked\n  } = props;\n\n  return (\n    <>\n      <div className=\"form-group text-left\">\n        <label htmlFor=\"pswd\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={onChangeHandler}\n        />\n        <small className=\"smart-desc pt-1\">Minimum length of 6 digits</small>\n        {password.length < 6 && isBtnClicked && (\n          <Error type={ErrorNames.passwordLengthShouldBeMinimumOf6Digit} />\n        )}\n      </div>\n      <div className=\"form-group text-left\">\n        <label htmlFor=\"confirmpswd\">Confirm Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          value={confirmPassword}\n          onChange={onChangeHandler}\n        />\n        {confirmPassword.length < 6 && isBtnClicked && (\n          <Error type={ErrorNames.passwordLengthShouldBeMinimumOf6Digit} />\n        )}\n      </div>\n      {!isPasswordAndConfirmPasswordEqual && isBtnClicked && (\n        <Error type={ErrorNames.passwordAndConfirmPssword} />\n      )}\n    </>\n  );\n}\n\nexport default PswdConfirmPswd;\n","import React from \"react\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\n\nimport { Skills } from \"utils/constants/skillsConstant\";\n\nimport \"./skillsInput.scss\";\n\nconst suggestions = Skills.map(country => {\n  return {\n    id: country,\n    text: country\n  };\n});\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nexport default class SkillsField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: [],\n      suggestions: suggestions\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleTagClick = this.handleTagClick.bind(this);\n  }\n\n  handleDelete(i) {\n    const { tags } = this.state;\n    this.setState(\n      {\n        tags: tags.filter((tag, index) => index !== i)\n      },\n      () => this.props.addSkills(this.state.tags)\n    );\n  }\n\n  handleAddition(tag) {\n    this.setState(\n      state => ({ tags: [...state.tags, tag] }),\n      () => this.props.addSkills(this.state.tags)\n    );\n  }\n\n  handleDrag(tag, currPos, newPos) {\n    const tags = [...this.state.tags];\n    const newTags = tags.slice();\n\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n\n    // re-render\n    this.setState({ tags: newTags }, () =>\n      this.props.addSkills(this.state.tags)\n    );\n  }\n\n  handleTagClick(index) {\n    console.log(\"The tag at index \" + index + \" was clicked\");\n  }\n\n  render() {\n    const { tags, suggestions } = this.state;\n    return (\n      <div>\n        <ReactTags\n          id=\"skills\"\n          tags={tags}\n          suggestions={suggestions}\n          delimiters={delimiters}\n          handleDelete={this.handleDelete}\n          handleAddition={this.handleAddition}\n          handleDrag={this.handleDrag}\n          handleTagClick={this.handleTagClick}\n        />\n      </div>\n    );\n  }\n}\n","export const Skills = [\n  \"React\",\n  \"Angular\",\n  \"Vue\",\n  \"Nodejs\",\n  \"Javascript\",\n  \"MongoDB\"\n];\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { iconName } from \"components/Icons/iconNames\";\nimport Icons from \"components/Icons\";\nimport PswdConfirmPswd from \"components/Input/pswdConfirmPswd\";\nimport SkillsField from \"components/Input/SkillsInput\";\nimport { routingEndpoints } from \"api/endpoints\";\nimport {\n  registerFormField,\n  UserRoles,\n  emailRegex,\n  setTokenToLocalStorage,\n  setUserIdToLocalStorage,\n  setUserRoleToLocalStorage\n} from \"utils/constants/commonConstants\";\n\nimport \"./register.scss\";\nimport Error from \"components/Errors\";\nimport { ErrorNames } from \"components/Errors/errorNames\";\nimport { LoginUser } from \"redux/actions/auth/loginAction\";\n\nfunction RegisterForm(props) {\n  const { registerUser, apiData, apiError, isApiLoading } = props;\n  const history = useHistory();\n  const [registerForm, setRegisterForm] = useState(registerFormField);\n  const [isButtonDisable, setIsButtonDisable] = useState(true);\n  const [\n    isPasswordAndConfirmPasswordEqual,\n    setIsPasswordAndConfirmPasswordEqual\n  ] = useState(false);\n  const [isEmailvalid, setIsEmailvalid] = useState(false);\n  const [isBtnClicked, setIsBtnClicked] = useState(false);\n\n  useEffect(() => {\n    if (\n      registerForm.confirmPassword.length >= 6 &&\n      registerForm.password.length >= 6 &&\n      registerForm.name.length !== 0 &&\n      registerForm.email.length !== 0 &&\n      registerForm.skills.length !== 0\n    ) {\n      setIsButtonDisable(false);\n    } else setIsButtonDisable(true);\n  }, [registerForm]);\n\n  useEffect(() => {\n    if (apiData) {\n      setTokenToLocalStorage(apiData?.data?.token);\n      setUserIdToLocalStorage(apiData?.data?.id);\n      setUserRoleToLocalStorage(apiData?.data?.userRole);\n      if (apiData.code === 201)\n        history.replace(routingEndpoints.recruiterDashboard);\n    }\n  }, [apiData]);\n\n  useEffect(() => {\n    if (isEmailvalid && isPasswordAndConfirmPasswordEqual && isBtnClicked) {\n      registerUser(registerForm);\n    }\n  }, [isEmailvalid, isPasswordAndConfirmPasswordEqual, isBtnClicked]);\n\n  const onChangeHandler = event => {\n    setRegisterForm({\n      ...registerForm,\n      [event.target.id]: event.target.selectedIndex ?? event.target.value\n    });\n  };\n\n  const registerBtnHandle = e => {\n    e.preventDefault();\n    if (registerForm.password !== registerForm.confirmPassword) {\n      setIsPasswordAndConfirmPasswordEqual(false);\n    } else setIsPasswordAndConfirmPasswordEqual(true);\n    setIsEmailvalid(emailRegex.test(registerForm.email.toLowerCase()));\n    setIsBtnClicked(true);\n    if (isEmailvalid && isPasswordAndConfirmPasswordEqual && isBtnClicked) {\n      registerUser(registerForm);\n    }\n  };\n\n  const onChangeSkillsHandler = data => {\n    let skills = [];\n    data.map(item => skills.push(item.text));\n    setRegisterForm({\n      ...registerForm,\n      skills: skills.join(\",\")\n    });\n  };\n\n  return (\n    <div className=\"entry-form\">\n      <h1 className=\"display-4 text-left register-form-title\">Register</h1>\n      {apiError && (\n        <div className=\"error\">\n          {apiError?.errors ? (\n            apiError?.errors.map(err => <p>{err.name}</p>)\n          ) : (\n            <p>{apiError.message}</p>\n          )}\n        </div>\n      )}\n      <form>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"formname\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            aria-describedby=\"form-name\"\n            placeholder=\"Enter name\"\n            value={registerForm.name}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"userrole\">Role</label>\n          <select\n            className=\"form-control\"\n            id=\"userRole\"\n            onChange={onChangeHandler}\n          >\n            {UserRoles.map(roles => (\n              <option key={roles.id} value={UserRoles[registerForm.userRole]}>\n                {roles.value}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"useremail\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            value={registerForm.email}\n            onChange={onChangeHandler}\n          />\n          {!isEmailvalid && isBtnClicked && (\n            <Error type={ErrorNames.emailNotvalid} />\n          )}\n        </div>\n        <PswdConfirmPswd\n          password={registerForm.password}\n          confirmPassword={registerForm.confirmPassword}\n          onChangeHandler={onChangeHandler}\n          isPasswordAndConfirmPasswordEqual={isPasswordAndConfirmPasswordEqual}\n          isBtnClicked={isBtnClicked}\n        />\n        <label htmlFor=\"skills\">Skills</label>\n        <SkillsField addSkills={onChangeSkillsHandler} />\n        <div className=\"login-btn mt-4\">\n          <button\n            disabled={isButtonDisable || isApiLoading}\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={registerBtnHandle}\n          >\n            {isApiLoading ? \"Authenticating\" : \"Register\"}\n            <span className=\"pl-2\">\n              {!isApiLoading ? (\n                <Icons type={iconName.rightArrow} />\n              ) : (\n                <span className=\"spinner-border\"></span>\n              )}\n            </span>\n          </button>\n        </div>\n      </form>\n      <button\n        type=\"button\"\n        className=\"text-center login-here pt-4 w-100 btn btn-link\"\n        onClick={() => history.push(routingEndpoints.login)}\n      >\n        Already a memeber? login here\n      </button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    registerUser: registerData => dispatch(LoginUser(registerData, \"register\"))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    apiData: state.userData.apiData,\n    apiError: state.userData.apiError,\n    isApiLoading: state.userData.isApiLoading\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport PswdConfirmPswd from \"components/Input/pswdConfirmPswd\";\nimport Icons from \"components/Icons\";\nimport { iconName } from \"components/Icons/iconNames\";\nimport { resetPasswordFormField } from \"utils/constants/commonConstants\";\n\nfunction ForgotPassword() {\n  const history = useHistory();\n  const [resetPasswordForm, setResetPasswordForm] = useState(\n    resetPasswordFormField\n  );\n  const [\n    isPasswordAndConfirmPasswordEqual,\n    setIsPasswordAndConfirmPasswordEqual\n  ] = useState(false);\n  const [isButtonDisable, setIsButtonDisable] = useState(true);\n\n  useEffect(() => {\n    if (\n      resetPasswordForm.confirmPassword.length !== 0 &&\n      resetPasswordForm.password.length !== 0\n    ) {\n      setIsButtonDisable(false);\n    } else setIsButtonDisable(true);\n  }, [resetPasswordForm]);\n\n  const resetPasswordBtnHandle = e => {\n    e.preventDefault();\n    if (resetPasswordForm.password === resetPasswordForm.confirmPassword) {\n      setIsPasswordAndConfirmPasswordEqual(false);\n    } else setIsPasswordAndConfirmPasswordEqual(true);\n  };\n\n  const onChangeHandler = event => {\n    setResetPasswordForm({\n      ...resetPasswordForm,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  return (\n    <div className=\"entry-form\">\n      <h1 className=\"display-4 text-left login-form-title\">Reset Password</h1>\n      <PswdConfirmPswd\n        password={resetPasswordForm.password}\n        confirmPassword={resetPasswordForm.confirmPassword}\n        onChangeHandler={onChangeHandler}\n        isPasswordAndConfirmPasswordEqual={isPasswordAndConfirmPasswordEqual}\n      />\n      <div className=\"login-btn mt-4\">\n        <button\n          disabled={isButtonDisable}\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={resetPasswordBtnHandle}\n        >\n          Reset password\n          <span className=\"pl-2\">\n            <Icons type={iconName.rightArrow} />\n          </span>\n        </button>\n      </div>\n      <button\n        type=\"button\"\n        className=\"text-center login-here pt-4 w-100 btn btn-link\"\n        onClick={() => history.goBack()}\n      >\n        Go Back\n      </button>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import React from \"react\";\n\nfunction MinimumLength() {\n  return <small>Minimum Length of 3 digits</small>;\n}\n\nexport default MinimumLength;\n","import React from \"react\";\nimport MinimumLength from \"./minimumLength\";\n\nfunction ModalBody(props) {\n  const { onChangeHandler, createJobForm } = props;\n\n  return (\n    <form>\n      <div className=\"form-group text-left\">\n        <input\n          type=\"title\"\n          className=\"form-control\"\n          id=\"title\"\n          aria-describedby=\"titleHelp\"\n          placeholder=\"Enter title\"\n          value={createJobForm.title}\n          onChange={onChangeHandler}\n        />\n        <MinimumLength />\n      </div>\n      <div className=\"form-group text-left\">\n        <input\n          type=\"description\"\n          className=\"form-control\"\n          id=\"description\"\n          placeholder=\"Password\"\n          value={createJobForm.description}\n          onChange={onChangeHandler}\n        />\n        <MinimumLength />\n      </div>\n      <div className=\"form-group text-left\">\n        <input\n          type=\"location\"\n          className=\"form-control\"\n          id=\"location\"\n          placeholder=\"Location\"\n          value={createJobForm.location}\n          onChange={onChangeHandler}\n        />\n        <MinimumLength />\n      </div>\n    </form>\n  );\n}\n\nexport default ModalBody;\n","import { commonActionType, RECRUITER_CREATE_JOB } from \"redux/constants\";\nimport { commonActionCreator } from \"../commonActionCreator\";\nimport { CreateJobService } from \"services/recruiter/recruiterService\";\n\nexport const CreateJob = jobData => {\n  return dispatch => {\n    dispatch(\n      commonActionCreator(\n        `${RECRUITER_CREATE_JOB}_${commonActionType.isApiLoading}`,\n        true\n      )\n    );\n    CreateJobService(jobData)\n      .then(response => {\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_CREATE_JOB}_${commonActionType.isApiLoading}`,\n            false\n          )\n        );\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_CREATE_JOB}_${commonActionType.setData}`,\n            response.data\n          )\n        );\n      })\n      .catch(error =>\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_CREATE_JOB}_${commonActionType.setError}`,\n            error.response.data\n          )\n        )\n      );\n  };\n};\n","import { httpMethods } from \"utils/constants/commonConstants\";\nimport { apiEndpoints, CANDIDATES } from \"api/endpoints\";\nimport { api } from \"api/api\";\n\nexport const CreateJobService = data => {\n  return api(`${apiEndpoints.createJob}`, httpMethods.POST, data);\n};\n\nexport const getPotedJobsService = () => {\n  return api(`${apiEndpoints.getPostedJobs}`, httpMethods.GET);\n};\n\nexport const deletePostedJobsService = jobId => {\n  return api(`${apiEndpoints.deletePostedJob}`, httpMethods.DELETE, jobId);\n};\n\nexport const getOneJobCandidatesService = jobId => {\n  return api(\n    `${apiEndpoints.getPostedJobs}/${jobId}/${CANDIDATES}`,\n    httpMethods.GET,\n    jobId\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport ModalBody from \"./modalBody\";\nimport {\n  CreateJobFormField,\n  clearLocalStorage\n} from \"utils/constants/commonConstants\";\nimport { CreateJob } from \"redux/actions/recruiterActions/createJobAction\";\n\nfunction CreateJobModal(props) {\n  const history = useHistory();\n  const { show, onHide, createJob, isApiLoading, apiData, apiError } = props;\n  const [createJobForm, setCreateJobForm] = useState(CreateJobFormField);\n  const [isButtonDisable, setIsButtonDisable] = useState(true);\n\n  useEffect(() => {\n    if (\n      createJobForm.description.length >= 3 &&\n      createJobForm.title.length >= 3 &&\n      createJobForm.location.length >= 3\n    ) {\n      setIsButtonDisable(false);\n    } else setIsButtonDisable(true);\n  }, [createJobForm]);\n\n  useEffect(() => {\n    if (apiData?.code === 201) {\n      onHide();\n    }\n  }, [apiData]);\n\n  useEffect(() => {\n    if (apiError?.code === 401) {\n      clearLocalStorage();\n      history.replace(\"/\");\n    }\n  }, [apiError]);\n\n  const onChangeHandler = event => {\n    setCreateJobForm({\n      ...createJobForm,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const createBtnHandler = () => {\n    createJob(createJobForm);\n  };\n\n  return (\n    <div\n      className={`modal ${show ? \"show\" : \"\"}`}\n      style={{\n        display: `${show ? \"block\" : \"none\"}`\n      }}\n      id=\"exampleModal\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n      backdrop=\"true\"\n    >\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n              Add Job\n            </h5>\n          </div>\n          <div class=\"modal-body\">\n            <ModalBody\n              createJobForm={createJobForm}\n              onChangeHandler={onChangeHandler}\n            />\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" onClick={onHide} class=\"btn btn-secondary\">\n              cancel\n            </button>\n            <button\n              onClick={createBtnHandler}\n              type=\"button\"\n              disabled={isButtonDisable || isApiLoading}\n              class=\"btn btn-primary\"\n            >\n              {!isApiLoading ? (\n                \"Create\"\n              ) : (\n                <>\n                  Loading <div class=\"spinner-border\"></div>\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createJob: jobData => dispatch(CreateJob(jobData))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    apiData: state.createJob.apiData,\n    apiError: state.createJob.apiError,\n    isApiLoading: state.createJob.isApiLoading\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateJobModal);\n","import { commonActionType, RECRUITER_POSTED_JOBS } from \"redux/constants\";\nimport { commonActionCreator } from \"../commonActionCreator\";\nimport { getPotedJobsService } from \"services/recruiter/recruiterService\";\n\nexport const getPostedJobs = () => {\n  return dispatch => {\n    dispatch(\n      commonActionCreator(\n        `${RECRUITER_POSTED_JOBS}_${commonActionType.isApiLoading}`,\n        true\n      )\n    );\n    getPotedJobsService()\n      .then(response => {\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_POSTED_JOBS}_${commonActionType.isApiLoading}`,\n            false\n          )\n        );\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_POSTED_JOBS}_${commonActionType.setData}`,\n            response.data\n          )\n        );\n      })\n      .catch(error =>\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_POSTED_JOBS}_${commonActionType.setError}`,\n            error.response.data\n          )\n        )\n      );\n  };\n};\n","import {\n  commonActionType,\n  RECRUITER_POSTED_JOBS,\n  actionTypes\n} from \"redux/constants\";\nimport { commonActionCreator } from \"../commonActionCreator\";\nimport { deletePostedJobsService } from \"services/recruiter/recruiterService\";\n\nexport const deletePostedJobs = jobId => {\n  return dispatch => {\n    dispatch(\n      commonActionCreator(\n        `${RECRUITER_POSTED_JOBS}_${commonActionType.isApiLoading}`,\n        true\n      )\n    );\n    deletePostedJobsService(jobId)\n      .then(response => {\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_POSTED_JOBS}_${commonActionType.isApiLoading}`,\n            false\n          )\n        );\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_POSTED_JOBS}_${actionTypes.deletePostedJob}`,\n            jobId\n          )\n        );\n      })\n      .catch(error =>\n        dispatch(\n          commonActionCreator(\n            `${RECRUITER_POSTED_JOBS}_${commonActionType.setError}`,\n            error.response.data\n          )\n        )\n      );\n  };\n};\n","import React from \"react\";\n\nimport Icons from \"components/Icons\";\nimport { iconName } from \"components/Icons/iconNames\";\nimport {\n  candidateScreen,\n  previousAppliedJobs\n} from \"utils/constants/commonConstants\";\n\nfunction ListPostedJobs(props) {\n  const { apiData, btnHandler, screen } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {apiData && apiData?.data?.length === 0 ? (\n        <div className=\"\">No posted jobs found</div>\n      ) : (\n        apiData &&\n        apiData?.data?.map(myJobs => {\n          return (\n            <>\n              <li key={myJobs.id} className=\"list-group-item m-3 border\">\n                <div>\n                  <h3>Title:</h3>\n                  {myJobs.title}\n                </div>\n                <div>\n                  <h3>Description:</h3>\n                  {myJobs.description}\n                </div>\n                <div>\n                  <h3>Location:</h3>\n                  {myJobs.location.toLowerCase()}\n                </div>\n                <div className=\"d-flex flex-row-reverse\">\n                  {screen !== previousAppliedJobs && (\n                    <button\n                      disabled={myJobs?.isApplied}\n                      className={`btn btn-${\n                        screen === candidateScreen ? \"success\" : \"danger\"\n                      }`}\n                      onClick={() => btnHandler(myJobs.id)}\n                    >\n                      <span className=\"pr-2\">\n                        {screen === candidateScreen\n                          ? myJobs?.isApplied\n                            ? \"Applied\"\n                            : \"Apply\"\n                          : \"Delete Job\"}\n                      </span>\n                      {screen === candidateScreen ? (\n                        <Icons type={iconName.job} />\n                      ) : (\n                        <Icons type={iconName.delete} />\n                      )}\n                    </button>\n                  )}\n                </div>\n              </li>\n            </>\n          );\n        })\n      )}\n    </ul>\n  );\n}\n\nexport default ListPostedJobs;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { clearLocalStorage } from \"utils/constants/commonConstants\";\nimport { loggedout } from \"redux/actions/auth/loginAction\";\nimport { routingEndpoints } from \"api/endpoints\";\n\nimport \"./topbar.scss\";\n\nfunction Topbar(props) {\n  const { history, logoutUser } = props;\n\n  const logout = () => {\n    clearLocalStorage();\n    logoutUser();\n    history.replace(routingEndpoints.login);\n  };\n\n  return (\n    <div className=\"topbar-container d-flex justify-content-between\">\n      <h2>Vivek Rajoriya</h2>\n      <button type=\"submit\" className=\"btn btn-dark\" onClick={logout}>\n        Logout\n      </button>\n    </div>\n  );\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(loggedout())\n  };\n};\nexport default connect(null, mapDispatchToProps)(Topbar);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Icons from \"components/Icons\";\nimport { iconName } from \"components/Icons/iconNames\";\nimport CreateJobModal from \"components/Modals/CreateJobModal\";\nimport { getPostedJobs } from \"redux/actions/recruiterActions/getPostedJobsAction\";\nimport { deletePostedJobs } from \"redux/actions/recruiterActions/deletePostedJobAction\";\nimport { useHistory } from \"react-router-dom\";\n\nimport ListPostedJobs from \"components/Lists/ListPostedJobs\";\nimport \"./recruiterDashboard.scss\";\nimport { RECRUITER_CREATE_JOB, commonActionType } from \"redux/constants\";\nimport { commonActionCreator } from \"redux/actions/commonActionCreator\";\nimport Topbar from \"components/Topbar\";\nimport { recruiterScreen } from \"utils/constants/commonConstants\";\n\nfunction RecruiterDashboard(props) {\n  const {\n    getPostedJobs,\n    isApiLoading,\n    apiData,\n    apiError,\n    deleteJob,\n    createJobApiData,\n    clearDataCreateJobData\n  } = props;\n  const [showCreateJobModal, setShowCreateJobModal] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    getPostedJobs();\n  }, []);\n\n  const deleteBtnhandler = jobId => {\n    deleteJob(jobId);\n  };\n\n  const onHide = () => {\n    setShowCreateJobModal(false);\n    if (createJobApiData?.data) {\n      clearDataCreateJobData();\n      getPostedJobs();\n    }\n  };\n\n  return (\n    <div className=\"recruiter-container\">\n      <Topbar history={history} />\n      <div className=\"create-job-section\">\n        <button\n          data-toggle=\"modal\"\n          data-target=\"#exampleModal\"\n          className=\"btn btn-success\"\n          onClick={() => setShowCreateJobModal(true)}\n        >\n          <Icons type={iconName.add} /> Create a job\n        </button>\n      </div>\n      {showCreateJobModal && (\n        <CreateJobModal onHide={onHide} show={showCreateJobModal} />\n      )}\n      <h1 className=\"m-3\">My posted jobs</h1>\n      {isApiLoading ? (\n        <div className=\"spinner-border\" />\n      ) : (\n        apiData && (\n          <ListPostedJobs\n            apiData={apiData?.data}\n            btnHandler={deleteBtnhandler}\n            screen={recruiterScreen}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPostedJobs: () => dispatch(getPostedJobs()),\n    deleteJob: jobId => dispatch(deletePostedJobs({ jobId: jobId })),\n    clearDataCreateJobData: () =>\n      dispatch(\n        commonActionCreator(\n          `${RECRUITER_CREATE_JOB}_${commonActionType.clearData}`,\n          false\n        )\n      )\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    apiData: state.recruiterPostedJobs.apiData,\n    apiError: state.recruiterPostedJobs.apiError,\n    isApiLoading: state.recruiterPostedJobs.isApiLoading,\n    createJobApiData: state.createJob.apiData\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecruiterDashboard);\n","import {\n  commonActionType,\n  AVAILAIBLE_JOBS_FOR_CANDIDATE\n} from \"redux/constants\";\nimport { commonActionCreator } from \"../commonActionCreator\";\nimport { getAvalaibleJobsForCandidateService } from \"services/candidate/candidateService\";\n\nexport const getPostedJobsForCandidates = () => {\n  return dispatch => {\n    dispatch(\n      commonActionCreator(\n        `${AVAILAIBLE_JOBS_FOR_CANDIDATE}_${commonActionType.isApiLoading}`,\n        true\n      )\n    );\n    getAvalaibleJobsForCandidateService()\n      .then(response => {\n        dispatch(\n          commonActionCreator(\n            `${AVAILAIBLE_JOBS_FOR_CANDIDATE}_${commonActionType.isApiLoading}`,\n            false\n          )\n        );\n        dispatch(\n          commonActionCreator(\n            `${AVAILAIBLE_JOBS_FOR_CANDIDATE}_${commonActionType.setData}`,\n            response.data\n          )\n        );\n      })\n      .catch(error =>\n        dispatch(\n          commonActionCreator(\n            `${AVAILAIBLE_JOBS_FOR_CANDIDATE}_${commonActionType.setError}`,\n            error.response.data\n          )\n        )\n      );\n  };\n};\n","import { api } from \"api/api\";\nimport { apiEndpoints, CANDIDATES, JOBS } from \"api/endpoints\";\nimport { httpMethods } from \"utils/constants/commonConstants\";\n\nexport const getAvalaibleJobsForCandidateService = () => {\n  return api(`${apiEndpoints.fetchAllAvalaibleJobs}`, httpMethods.GET);\n};\n\nexport const applyForJobService = jobId => {\n  return api(`${CANDIDATES}/${JOBS}`, httpMethods.POST, jobId);\n};\n\nexport const getAppliedJobsService = () => {\n  return api(`${CANDIDATES}/${JOBS}/applied`, httpMethods.GET);\n};\n","import { commonActionType, APPLIED_JOBS, actionTypes } from \"redux/constants\";\nimport { commonActionCreator } from \"../commonActionCreator\";\nimport { applyForJobService } from \"services/candidate/candidateService\";\n\nexport const appliedJobs = jobId => {\n  return dispatch => {\n    dispatch(\n      commonActionCreator(\n        `${APPLIED_JOBS}_${commonActionType.isApiLoading}`,\n        true\n      )\n    );\n    applyForJobService(jobId)\n      .then(response => {\n        dispatch(\n          commonActionCreator(\n            `${APPLIED_JOBS}_${commonActionType.isApiLoading}`,\n            false\n          )\n        );\n        dispatch(\n          commonActionCreator(\n            `${APPLIED_JOBS}_${actionTypes.jobApplied}`,\n            jobId\n          )\n        );\n      })\n      .catch(error =>\n        dispatch(\n          commonActionCreator(\n            `${APPLIED_JOBS}_${commonActionType.setError}`,\n            error.response.data\n          )\n        )\n      );\n  };\n};\n","import { commonActionType, PREVIOUS_APPLIED_JOBS } from \"redux/constants\";\nimport { commonActionCreator } from \"../commonActionCreator\";\nimport { getAppliedJobsService } from \"services/candidate/candidateService\";\n\nexport const fetchPreviousAppliedJobs = () => {\n  return dispatch => {\n    dispatch(\n      commonActionCreator(\n        `${PREVIOUS_APPLIED_JOBS}_${commonActionType.isApiLoading}`,\n        true\n      )\n    );\n    getAppliedJobsService()\n      .then(response => {\n        dispatch(\n          commonActionCreator(\n            `${PREVIOUS_APPLIED_JOBS}_${commonActionType.isApiLoading}`,\n            false\n          )\n        );\n        dispatch(\n          commonActionCreator(\n            `${PREVIOUS_APPLIED_JOBS}_${commonActionType.setData}`,\n            response.data\n          )\n        );\n      })\n      .catch(error =>\n        dispatch(\n          commonActionCreator(\n            `${PREVIOUS_APPLIED_JOBS}_${commonActionType.setError}`,\n            error.response.data\n          )\n        )\n      );\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Topbar from \"components/Topbar\";\nimport { getPostedJobsForCandidates } from \"redux/actions/candidate/fetchAllJobsForCandidateAction\";\nimport ListPostedJobs from \"components/Lists/ListPostedJobs\";\nimport {\n  candidateScreen,\n  previousAppliedJobs\n} from \"utils/constants/commonConstants\";\nimport { appliedJobs } from \"redux/actions/candidate/applyForJob\";\nimport { fetchPreviousAppliedJobs } from \"redux/actions/candidate/appliedJobs\";\n\nimport \"./CandidateDashboard.scss\";\n\nfunction CandidateDashboard(props) {\n  const {\n    getAvailableJobs,\n    isApiLoading,\n    history,\n    apiData,\n    applyForJob,\n    getPreviouslyAppliedJobs,\n    apiDataOfPreviousJobs\n  } = props;\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  useEffect(() => {\n    getAvailableJobs();\n  }, []);\n\n  useEffect(() => {\n    if (selectedTab === 1 && !apiDataOfPreviousJobs) {\n      getPreviouslyAppliedJobs();\n    }\n  }, [selectedTab]);\n\n  const applyBtnHandler = id => {\n    applyForJob(id);\n  };\n\n  return (\n    <>\n      <Topbar history={history} />\n      <div class=\"container\">\n        <div class=\"row\">\n          <div\n            className={`col-sm border-bottom border-right text-center ${selectedTab ===\n              0 && \"active\"}`}\n            onClick={() => setSelectedTab(0)}\n          >\n            <h3 className=\"m-3\">Jobs</h3>\n          </div>\n          <div\n            className={`col-sm border-bottom text-center ${selectedTab === 1 &&\n              \"active\"}`}\n            onClick={() => setSelectedTab(1)}\n          >\n            <h3 className=\"m-3\">Applied Jobs</h3>\n          </div>\n        </div>\n      </div>\n\n      {isApiLoading ? (\n        <div className=\"spinner-border\" />\n      ) : (\n        apiData && (\n          <ListPostedJobs\n            screen={selectedTab === 0 ? candidateScreen : previousAppliedJobs}\n            apiData={selectedTab === 0 ? apiData : apiDataOfPreviousJobs}\n            btnHandler={applyBtnHandler}\n          />\n        )\n      )}\n    </>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAvailableJobs: () => dispatch(getPostedJobsForCandidates()),\n    applyForJob: id => dispatch(appliedJobs({ jobId: id })),\n    getPreviouslyAppliedJobs: () => dispatch(fetchPreviousAppliedJobs())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    apiData: state.jobsForCandidates.apiData,\n    apiError: state.jobsForCandidates.apiError,\n    isApiLoading: state.jobsForCandidates.isApiLoading,\n    apiDataOfPreviousJobs: state.previousAppliedJobs.apiData\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CandidateDashboard)\n);\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginForm from \"screens/Login\";\nimport RegisterForm from \"screens/Register\";\nimport { routingEndpoints } from \"api/endpoints\";\nimport ForgotPassword from \"screens/ForgotPassword\";\nimport RecruiterDashboard from \"screens/RecruiterDashboard\";\nimport CandidateDashboard from \"screens/CandidateDashboard\";\n\nexport default function Routing() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <RegisterForm />\n        </Route>\n        <Route exact path={routingEndpoints.login}>\n          <LoginForm />\n        </Route>\n        <Route exact path={routingEndpoints.register}>\n          <RegisterForm />\n        </Route>\n        <Route exact path={routingEndpoints.forgotPswd}>\n          <ForgotPassword />\n        </Route>\n        <Route exact path={routingEndpoints.recruiterDashboard}>\n          <RecruiterDashboard />\n        </Route>\n        <Route exact path={routingEndpoints.candidateDashboard}>\n          <CandidateDashboard />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) return <h1>Something went wrong.</h1>;\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport \"./App.css\";\nimport Routing from \"./routes\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport {\n  getUserRoleFromLocalStorage,\n  getTokenFromLocalStorage\n} from \"utils/constants/commonConstants\";\nimport CandidateDashboard from \"screens/CandidateDashboard\";\nimport RecruiterDashboard from \"screens/RecruiterDashboard\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <ErrorBoundary>\n          {JSON.parse(getUserRoleFromLocalStorage()) === 0 && (\n            <>\n              <RecruiterDashboard />\n            </>\n          )}\n          {JSON.parse(getUserRoleFromLocalStorage()) === 1 && (\n            <>\n              <CandidateDashboard />\n            </>\n          )}\n          {!getTokenFromLocalStorage() && <Routing />}\n        </ErrorBoundary>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  commonActionType,\n  LOGINREDUXCONSTANT,\n  actionTypes\n} from \"redux/constants\";\n\nconst initialState = {\n  isApiLoading: false,\n  apiData: null,\n  isApiFailed: false,\n  apiError: null\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case `${LOGINREDUXCONSTANT}_${commonActionType.isApiLoading}`:\n      return {\n        ...state,\n        isApiLoading: action.payload\n      };\n    case `${LOGINREDUXCONSTANT}_${commonActionType.setData}`:\n      return {\n        ...state,\n        isApiLoading: false,\n        apiData: action.payload,\n        isApiFailed: false,\n        apiError: null,\n        isLoggedIn: true\n      };\n    case `${LOGINREDUXCONSTANT}_${commonActionType.setError}`:\n      return {\n        ...state,\n        isApiFailed: true,\n        isApiLoading: false,\n        apiError: action.payload\n      };\n\n    case `${LOGINREDUXCONSTANT}_${actionTypes.logout}`:\n      return {\n        ...state,\n        isLoggedIn: false,\n        apiData: null\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default loginReducer;\n","import { commonActionType, RECRUITER_CREATE_JOB } from \"redux/constants\";\n\nconst initialState = {\n  isApiLoading: false,\n  apiData: null,\n  isApiFailed: false,\n  apiError: null\n};\n\nconst recruiterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case `${RECRUITER_CREATE_JOB}_${commonActionType.isApiLoading}`:\n      return {\n        ...state,\n        isApiLoading: action.payload\n      };\n    case `${RECRUITER_CREATE_JOB}_${commonActionType.setData}`:\n      return {\n        ...state,\n        isApiLoading: false,\n        apiData: action.payload,\n        isApiFailed: false,\n        apiError: null\n      };\n    case `${RECRUITER_CREATE_JOB}_${commonActionType.setError}`:\n      return {\n        ...state,\n        isApiFailed: true,\n        isApiLoading: false,\n        apiError: action.payload\n      };\n\n    case `${RECRUITER_CREATE_JOB}_${commonActionType.clearData}`:\n      return {\n        ...state,\n        isApiFailed: false,\n        isApiLoading: false,\n        apiError: null,\n        apiData: null\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default recruiterReducer;\n","import {\n  commonActionType,\n  RECRUITER_POSTED_JOBS,\n  actionTypes\n} from \"redux/constants\";\n\nconst initialState = {\n  isApiLoading: false,\n  apiData: null,\n  isApiFailed: false,\n  apiError: null\n};\n\nconst RECRUITER_POSTED_JOBSReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case `${RECRUITER_POSTED_JOBS}_${commonActionType.isApiLoading}`:\n      return {\n        ...state,\n        isApiLoading: action.payload\n      };\n    case `${RECRUITER_POSTED_JOBS}_${commonActionType.setData}`:\n      return {\n        ...state,\n        isApiLoading: false,\n        apiData: action.payload,\n        isApiFailed: false,\n        apiError: null\n      };\n    case `${RECRUITER_POSTED_JOBS}_${commonActionType.setError}`:\n      return {\n        ...state,\n        isApiFailed: true,\n        isApiLoading: false,\n        apiError: action.payload\n      };\n\n    case `${RECRUITER_POSTED_JOBS}_${actionTypes.deletePostedJob}`:\n      return {\n        ...state,\n        apiData: {\n          ...state.apiData,\n          data: {\n            ...state.apiData.data,\n            data: state.apiData.data.data.filter(\n              job => job.id !== action.payload.jobId\n            )\n          }\n        }\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default RECRUITER_POSTED_JOBSReducer;\n","import {\n  commonActionType,\n  AVAILAIBLE_JOBS_FOR_CANDIDATE,\n  APPLIED_JOBS,\n  actionTypes\n} from \"redux/constants\";\n\nconst initialState = {\n  isApiLoading: false,\n  apiData: null,\n  isApiFailed: false,\n  apiError: null\n};\n\nconst candidateReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case `${AVAILAIBLE_JOBS_FOR_CANDIDATE}_${commonActionType.isApiLoading}`:\n      return {\n        ...state,\n        isApiLoading: action.payload\n      };\n    case `${AVAILAIBLE_JOBS_FOR_CANDIDATE}_${commonActionType.setData}`:\n      return {\n        ...state,\n        isApiLoading: false,\n        apiData: action.payload,\n        isApiFailed: false,\n        apiError: null\n      };\n    case `${AVAILAIBLE_JOBS_FOR_CANDIDATE}_${commonActionType.setError}`:\n      return {\n        ...state,\n        isApiFailed: true,\n        isApiLoading: false,\n        apiError: action.payload\n      };\n\n    case `${AVAILAIBLE_JOBS_FOR_CANDIDATE}_${commonActionType.clearData}`:\n      return {\n        ...state,\n        isApiFailed: false,\n        isApiLoading: false,\n        apiError: null,\n        apiData: null\n      };\n\n    case `${APPLIED_JOBS}_${actionTypes.jobApplied}`:\n      return {\n        ...state,\n        apiData: {\n          ...state.apiData,\n          data: state.apiData.data.map(job => {\n            return job.id === action.payload.jobId\n              ? { ...job, isApplied: true }\n              : job;\n          })\n        }\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default candidateReducer;\n","import {\n  commonActionType,\n  PREVIOUS_APPLIED_JOBS,\n  APPLIED_JOBS,\n  actionTypes\n} from \"redux/constants\";\n\nconst initialState = {\n  isApiLoading: false,\n  apiData: null,\n  isApiFailed: false,\n  apiError: null\n};\n\nconst previousAppliedJobsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case `${PREVIOUS_APPLIED_JOBS}_${commonActionType.isApiLoading}`:\n      return {\n        ...state,\n        isApiLoading: action.payload\n      };\n    case `${PREVIOUS_APPLIED_JOBS}_${commonActionType.setData}`:\n      return {\n        ...state,\n        isApiLoading: false,\n        apiData: action.payload,\n        isApiFailed: false,\n        apiError: null\n      };\n    case `${PREVIOUS_APPLIED_JOBS}_${commonActionType.setError}`:\n      return {\n        ...state,\n        isApiFailed: true,\n        isApiLoading: false,\n        apiError: action.payload\n      };\n\n    case `${PREVIOUS_APPLIED_JOBS}_${commonActionType.clearData}`:\n      return {\n        ...state,\n        isApiFailed: false,\n        isApiLoading: false,\n        apiError: null,\n        apiData: null\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default previousAppliedJobsReducer;\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./auth/loginReducer\";\nimport recruiterReducer from \"./recruiterReducer/recruiter\";\nimport recruiterPostedJobsReducer from \"./recruiterReducer/recruiterPostedJobsReducer\";\nimport candidateReducer from \"./candidateReducer/candidate\";\nimport previousAppliedJobsReducer from \"./candidateReducer/previousAppliedJobsReducer\";\n\nconst rootReducer = combineReducers({\n  userData: loginReducer,\n  createJob: recruiterReducer,\n  recruiterPostedJobs: recruiterPostedJobsReducer,\n  jobsForCandidates: candidateReducer,\n  previousAppliedJobs: previousAppliedJobsReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers/combineReducer\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk, logger))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}